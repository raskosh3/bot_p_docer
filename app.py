import os
import asyncio
import logging
from aiohttp import web
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤–∞—à–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
from handlers.start import router as start_router
from handlers.catalog import router as catalog_router
from handlers.cart import router as cart_router
from handlers.order import router as order_router

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def health_check(request):
    """Health check endpoint"""
    return web.Response(text="‚úÖ Bakery Bot is running!")

async def start_web_server():
    """–ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ - –í –ü–ï–†–í–£–Æ –û–ß–ï–†–ï–î–¨"""
    app = web.Application()
    app.router.add_get('/', health_check)
    app.router.add_get('/health', health_check)
    
    runner = web.AppRunner(app)
    await runner.setup()
    
    port = int(os.environ.get("PORT", 10000))
    site = web.TCPSite(runner, "0.0.0.0", port)
    await site.start()
    
    logger.info(f"üåê Web server started on port {port}")
    return runner

async def start_telegram_bot():
    """–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ - –≤–æ –≤—Ç–æ—Ä—É—é –æ—á–µ—Ä–µ–¥—å"""
    try:
        logger.info("üöÄ Starting Telegram bot...")
        
        bot = Bot(token=os.getenv('BOT_TOKEN'))
        dp = Dispatcher(storage=MemoryStorage())

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–æ–≤
        dp.include_router(start_router)
        dp.include_router(catalog_router)
        dp.include_router(cart_router)
        dp.include_router(order_router)

        await bot.delete_webhook(drop_pending_updates=True)
        
        logger.info("‚úÖ Telegram bot started!")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–ª–∏–Ω–≥ (–±–ª–æ–∫–∏—Ä—É—é—â–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è)
        await dp.start_polling(bot)
        
    except Exception as e:
        logger.error(f"‚ùå Bot error: {e}")
        raise

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # 1. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä (–≤–∞–∂–Ω–æ –¥–ª—è Render!)
    runner = await start_web_server()
    
    # 2. –ó–∞—Ç–µ–º –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    try:
        await start_telegram_bot()
    except Exception as e:
        logger.error(f"Bot failed: {e}")
    finally:
        # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
        await runner.cleanup()

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    if not os.getenv('BOT_TOKEN'):
        logger.error("‚ùå BOT_TOKEN not set!")
        exit(1)
        
    # –ó–∞–ø—É—Å–∫–∞–µ–º
    asyncio.run(main())
