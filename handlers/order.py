from aiogram import Router, F, Bot
from aiogram.types import CallbackQuery, Message
from aiogram.filters import StateFilter
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext

from database import Database
from config import Config
from keyboards import get_main_keyboard

router = Router()
db = Database()


class OrderStates(StatesGroup):
    waiting_for_name = State()
    waiting_for_address = State()
    waiting_for_phone = State()


@router.callback_query(F.data == "checkout")
async def start_checkout(callback: CallbackQuery, state: FSMContext):
    cart_items = db.get_user_cart(callback.from_user.id)

    if not cart_items:
        await callback.answer("‚ùå –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!")
        return

    await state.set_state(OrderStates.waiting_for_name)
    await callback.message.answer("üìù –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–∞–º –Ω—É–∂–Ω–∞ –≤–∞—à–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.\n\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    await callback.answer()


@router.message(OrderStates.waiting_for_name)
async def process_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(OrderStates.waiting_for_address)
    await message.answer("üè† –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:")


@router.message(OrderStates.waiting_for_address)
async def process_address(message: Message, state: FSMContext):
    await state.update_data(address=message.text)
    await state.set_state(OrderStates.waiting_for_phone)
    await message.answer("üìû –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")


@router.message(OrderStates.waiting_for_phone)
async def process_phone(message: Message, state: FSMContext, bot: Bot):
    try:
        await state.update_data(phone=message.text)
        user_data = await state.get_data()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        db.update_user_info(message.from_user.id, user_data)

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–∫–∞–∑
        cart_items = db.get_user_cart(message.from_user.id)
        total = sum(item['price'] * item['quantity'] for item in cart_items)

        # –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        order_text = "üÜï –ù–û–í–´–ô –ó–ê–ö–ê–ó!\n\n"
        order_text += f"üë§ –ö–ª–∏–µ–Ω—Ç: {user_data['name']}\n"
        order_text += f"üè† –ê–¥—Ä–µ—Å: {user_data['address']}\n"
        order_text += f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {user_data['phone']}\n"
        order_text += f"üÜî ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.from_user.id}\n"
        order_text += f"üë§ Username: @{message.from_user.username if message.from_user.username else '–Ω–µ—Ç'}\n\n"
        order_text += "üì¶ –°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:\n"

        for item in cart_items:
            item_total = item['price'] * item['quantity']
            order_text += f"‚Ä¢ {item['name']} - {item['quantity']} x {item['price']} —Ä—É–±. = {item_total} —Ä—É–±.\n"

        order_text += f"\nüí∞ –ò—Ç–æ–≥–æ: {total} —Ä—É–±."

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        if Config.ADMIN_ID:
            await bot.send_message(Config.ADMIN_ID, order_text)
        else:
            # –ï—Å–ª–∏ ADMIN_ID –Ω–µ —É–∫–∞–∑–∞–Ω, –ª–æ–≥–∏—Ä—É–µ–º –∑–∞–∫–∞–∑
            from main import logger
            logger.info(f"–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ (ADMIN_ID –Ω–µ —É–∫–∞–∑–∞–Ω): {order_text}")

        # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        user_order_text = "‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç!\n\n"
        user_order_text += f"üë§ –ò–º—è: {user_data['name']}\n"
        user_order_text += f"üè† –ê–¥—Ä–µ—Å: {user_data['address']}\n"
        user_order_text += f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {user_data['phone']}\n\n"
        user_order_text += "üì¶ –í–∞—à –∑–∞–∫–∞–∑:\n"

        for item in cart_items:
            item_total = item['price'] * item['quantity']
            user_order_text += f"‚Ä¢ {item['name']} - {item['quantity']} x {item['price']} —Ä—É–±. = {item_total} —Ä—É–±.\n"

        user_order_text += f"\nüí∞ –ò—Ç–æ–≥–æ: {total} —Ä—É–±.\n\n"
        user_order_text += "‚è≥ –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞!"

        # –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
        db.clear_cart(message.from_user.id)

        await message.answer(user_order_text, reply_markup=get_main_keyboard())
        await state.clear()

    except Exception as e:
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                             reply_markup=get_main_keyboard())
        await state.clear()