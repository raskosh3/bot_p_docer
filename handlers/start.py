from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, FSInputFile  # –ò–∑–º–µ–Ω–∏–ª–∏ –∏–º–ø–æ—Ä—Ç
from aiogram.filters import CommandStart
import os
import logging

from keyboards import get_main_keyboard, get_back_keyboard
from config import Config

router = Router()
logger = logging.getLogger(__name__)


@router.message(CommandStart())
async def cmd_start(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""

    welcome_text = """üç∞–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–µ–∫–∞—Ä–Ω—è ¬´–ö—É–ª–∏–Ω–∞—Ä–Ω—ã–π –¥–æ–º –ë–µ–ª–µ—Ü–∫–∏—Ö¬ª. –Ø —à–µ—Ñ –ò—Ä–∏–Ω–∞ –ë–µ–ª–µ—Ü–∫–∞—è!ü•ñ 

–ì–æ—Ç–æ–≤–∏–º –ø–æ –Ω–∞—à–∏–º —Å–µ–º–µ–π–Ω—ã–º —Ä–µ—Ü–µ–ø—Ç–∞–º, —Å –ª—é–±–æ–≤—å—é. –¢–∞–∫ —á—Ç–æ —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –¥—É—à–∞ –ø—Ä–æ—Å–∏—Ç —Å–µ–≥–æ–¥–Ω—è —Å–ª–∞–¥–µ–Ω—å–∫–æ–≥–æ –∏–ª–∏ —Å—ã—Ç–Ω–æ–≥–æ? 
–í–æ–∑–¥—É—à–Ω—ã—Ö –±–ª–∏–Ω–æ–≤, —Ä—É–º—è–Ω—ã—Ö –ø–∏—Ä–æ–≥–æ–≤ –∏–ª–∏ –Ω–µ–∂–Ω—ã—Ö —Å—ã—Ä–Ω–∏–∫–æ–≤? –ñ–¥—É —É –ø–µ—á–∏!

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:
‚Ä¢ üç∞ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—à –∫–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ü–∏–∏
‚Ä¢ ‚ÑπÔ∏è –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –Ω–∞—à–µ–π –ø–µ–∫–∞—Ä–Ω–µ
‚Ä¢ üõí –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑

–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é –Ω–∏–∂–µüëá"""

    # –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
    image_path = "C:\\Users\\Yefom1t\\PycharmProjects\\bot_bot\\pirog5\\images\\welcome.jpg"

    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç {message.from_user.id}")
    logger.info(f"–ü—ã—Ç–∞—é—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {image_path}")
    logger.info(f"–§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {os.path.exists(image_path)}")

    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ
        if os.path.exists(image_path):
            logger.info("–§–∞–π–ª –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—é FSInputFile...")
            photo = FSInputFile(image_path)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º FSInputFile
            logger.info("FSInputFile —Å–æ–∑–¥–∞–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è—é —Ñ–æ—Ç–æ...")

            await message.answer_photo(
                photo=photo,
                caption=welcome_text,
                reply_markup=get_main_keyboard()
            )
            logger.info("‚úÖ –§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        else:
            logger.warning("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è—é —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç")
            await message.answer(welcome_text, reply_markup=get_main_keyboard())

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ: {e}")
        logger.info("–û—Ç–ø—Ä–∞–≤–ª—è—é —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏...")
        await message.answer(welcome_text, reply_markup=get_main_keyboard())


@router.message(F.text == "ü§ñ –ó–∞–∫–∞–∑–∞—Ç—å –±–æ—Ç–∞")
async def about_bot(message: Message):
    bot_info = """ü§ñ –ë–∏–∑–Ω–µ—Å –ë–æ—Ç –ü—Ä–æ ‚Äî –º—ã —Å–æ–∑–¥–∞—ë–º –±–æ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ä–µ–∞–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞—é—Ç: –ø—Ä–æ–¥–∞—é—Ç, –æ–±—É—á–∞—é—Ç, –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é—Ç –∏ —É–ø—Ä–∞–≤–ª—è—é—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏ –±–µ–∑ –≤–∞—à–µ–≥–æ —É—á–∞—Å—Ç–∏—è.

üß© –í—Å—ë –≤ –ø—Ä–∏–≤—ã—á–Ω–æ–º Telegram, –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –∏ –ª–∏—à–Ω–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫.

üöÄ –ó–∞–ø—Ä–æ—Å–∏—Ç–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –∑–∞–¥–∞—á—É –∏–ª–∏ –ª—é–±—É—é –∏–¥–µ—é ‚Äî –æ—Ç –∑–∞—è–≤–æ–∫ –¥–æ —É—á—ë—Ç–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞, –º—ã –ø–æ–∫–∞–∂–µ–º, –∫–∞–∫ —ç—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å."""
    await message.answer(bot_info, reply_markup=get_back_keyboard())


@router.message(F.text == "‚ÑπÔ∏è –û –Ω–∞—Å")
async def about_bakery(message: Message):
    about_text = """üè™ –û –Ω–∞—à–µ–π –ø–µ–∫–∞—Ä–Ω–µ

–ú—ã - —Å–µ–º–µ–π–Ω–∞—è –ø–µ–∫–∞—Ä–Ω—è —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–º–∏ —Ç—Ä–∞–¥–∏—Ü–∏—è–º–∏. 
–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –∏ –≥–æ—Ç–æ–≤–∏–º —Å –ª—é–±–æ–≤—å—é!

üìç –ù–∞—à –∞–¥—Ä–µ—Å: 
üïí –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: 8:00 - 20:00
üìû –¢–µ–ª–µ—Ñ–æ–Ω:

–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º:
‚Ä¢ –°–≤–µ–∂—É—é –≤—ã–ø–µ—á–∫—É –µ–∂–µ–¥–Ω–µ–≤–Ω–æ
‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
‚Ä¢ –ë—ã—Å—Ç—Ä—É—é –¥–æ—Å—Ç–∞–≤–∫—É
‚Ä¢ –ü—Ä–∏—è—Ç–Ω—ã–µ —Ü–µ–Ω—ã"""
    await message.answer(about_text, reply_markup=get_back_keyboard())


@router.callback_query(F.data == "back_to_main")
async def back_to_main(callback: CallbackQuery):
    await callback.message.edit_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=None)
    await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", reply_markup=get_main_keyboard())
    await callback.answer()